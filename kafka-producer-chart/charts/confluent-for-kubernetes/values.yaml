## Confluent operator name
##
name: confluent-operator
##
## license Key
##
licenseKey: ""
##
## Load license either from the secret or through directoryPath.
## This will take precedence over licenseKey field.
##
license:
  secretRef: ""
  directoryPathInContainer: ""

## AutoGenerated certificates configuration.
## We will continue using older model of reading CA from secret "ca-pair-sslcerts" unless
## managedCerts.enabled is set to true.
managedCerts:
  enabled: false
  caCertificate:
    secretRef: ""
    directoryPathInContainer: ""
  certDurationInDays: 60
  renewBeforeInDays: 30
  sans: ""

### Image pull secret
imagePullSecretRef: confluent-registry

### Confluent Operator Image Information
image:
  registry: docker.io
  repository: confluentinc/confluent-operator
  pullPolicy: IfNotPresent
  tag: "0.1033.33"

### Priority class for Confluent Operator pod
priorityClassName: ""

## Number of pods for Operator
replicas: 1

## Confluent Operator Cluster Access
namespaced: true
namespaceList: []

## Confluent Operator Pod Resources
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

terminationGracePeriodSeconds: 30
debug: false
fipsmode: false
numDay2Worker: ""

## Configure affinity
affinity: {}

## Configure tolerations
tolerations: []

## Pod Security Context
podSecurity:
  enabled: true
  securityContext:
    fsGroup: 1001
    runAsUser: 1001
    runAsNonRoot: true

## Container Security Context
containerSecurity:
  enabled: false
  securityContext: {}

## ServiceAccount
serviceAccount:
  create: true
  name: ""

## Enable Kubernetes RBAC
rbac: true

## Enable extra Kubernetes API groups in role/clusterrole resource
clusterRole:
  openshift: true

## Confluent Telemetry Report configuration
telemetry:
  operator:
    enabled: false
  enabled: false
  proxy:
    enabled: false
    credentialRequired: false
  secretRef: ""
  directoryPathInContainer: ""

kRaftEnabled: false

### Webhooks configuration
webhooks:
  enabled: false
  port: 8443
  tls:
    secretRef: ""
    directoryPathInContainer: ""

## Pod annotations/labels configurations
pod:
  annotations:
    prometheus.io/path: "/metrics"
    prometheus.io/port: "7778"
    prometheus.io/scrape: "true"
  labels: {}

## Volumes to mount on CFK operator
mountedVolumes:
  volumes: []
  volumeMounts: []

## --- ADDED CONFIGURATION FOR SERVICE TYPE ---
service:
  type: NodePort
  nodePort: 30080  # You can customize the node port if needed
